#include <stdio.h>
#include <sys/ipc.h>
#include <sys/msg.h>
#define MAX 100

// structure for message queue
struct mesg_buffer {
    long mesg_type;
    char mesg_text[MAX];
} message;

int main() {
    key_t key;
    int msgid;
    
    // ftok to generate unique key
    key = ftok("progfile", 65);
    
    // msgget creates a message queue and returns identifier
    msgid = msgget(key, 0666 | IPC_CREAT);
    message.mesg_type = 1;
    
    printf("Write Data : ");
    fgets(message.mesg_text, sizeof(message.mesg_text), stdin);  
    
    // msgsnd to send message
    msgsnd(msgid, &message, sizeof(message), 0);
    
    // Display the message
    printf("Data sent is: %s \n", message.mesg_text);  
    
    return 0;
}



[2021ict37@fedora ~]$ vi msgQ.c
[2021ict37@fedora ~]$ gcc msgQ.c -o msgQ
[2021ict37@fedora ~]$ ./msgQ
Write Data : Hello
Data sent is: Hello


#include <stdio.h>
#include <sys/ipc.h>
#include <sys/msg.h>

struct mesg_buffer {
    long mesg_type;
    char mesg_text[100];
} message;

int main() {
    key_t key;
    int msgid;
    
    // ftok to generate unique key
    key = ftok("progfile", 65);
    
    // msgget creates a message queue and returns identifier
    msgid = msgget(key, 0666 | IPC_CREAT);
    msgrcv(msgid, &message, sizeof(message),1,0);
	
	printf("Data Received: %s \n", message.mesg_text);
    
	msgct1(msgid, IPC_RMID, NULL)
    
    return 0;
}